%!PS-Adobe-3.0
%%Creator: (ImageMagick)
%%Title: (ppf)
%%CreationDate: (2025-03-14T09:29:44+00:00)
%%BoundingBox: 622 152 760 156
%%HiResBoundingBox: 622 152 760 156
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 622 152 760 156
DisplayImage
622 152
138 4
12
138 4
1
1
1
8
5466F3593D88D44D3D7AF4F0E08A44F1E7563D4641423D3E5841413D46DBDF593D3F5A72
3F3D83E0DF773D3D58483D42C1DFDF593D433F5466F368587274473D5DE1DF713D3D5344
453D65F2DFDF8A44F1E768587274473D5DE1DF593D3F4E5F3D3D9FE0DF68587274473D5D
E1DF593D88EDBD3D3DD4DFCD3E3DCBDD413D68755C3DDFE1593D88EDDF59F7EFF2583D74
533D7BF4EFDFDE5875F6DF563D49E1DC3D3D54E7CA3D3DC1DF583D54F2F3963D3FDEC33D
3D94F7E64D3D72E3DE583D42D3F7EFF2D2F0E4D7AD3D3DD3C83D3D8EF7DC443D65F2DEDE
5875F6DFD2F0E4D7AD3D3DD3DE583D4CEAF5633D74E9DED2F0E4D7AD3D3DD3DE583D88ED
DE5E3D90E2983D55F6BC3D47E7F1EFDEF2E0583D88EDDE58E2DEDF583D3D3D68F4EFDFDE
C83DB0EFDE563D7BF6E1413D8EF4D53D3DB2E5583D81F4DFB93D3DCBA33D3DD5EBDE783D
4DEFDE583D76F6E2DEDF9C4B3D3D3D3D3DC5B13D3DD1ECDE683D65F2DEC83DB0EFDE9C4B
3D3D3D3D3DC5E3583D7EF5DF753D63EFDE9C4B3D3D3D3D3DC5E3583D88EDDE9F3D4DE963
3D9AF4D54A3D3D4E6BA1E1DF583D88EDDE58DDDDDD583D463D41BDDEDDDD9440EAE6DD56
3D88EFDD443D9DECD33D3DB1E7583D7CEEDDB53D3DCBA53D3DD6E2DD783D4DF5DD583D88
EFDDDDBF3E3D7EB7A33D3DC2B03D3DD5E2DD6B3D65F2DD9440EAE6BF3E3D7EB7A33D3DC2
E4583D88EEDD763D62F2BF3E3D7EB7A33D3DC2E4583D88ECDDD6473DAB3F3DDEEADDCB93
6C4D3D3DABDD583D88ECDD58
%%PageTrailer
%%Trailer
%%EOF
